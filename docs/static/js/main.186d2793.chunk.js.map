{"version":3,"sources":["components/AddCategories.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategories","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cat","type","value","onChange","target","prototype","PropTypes","func","isRequired","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","console","log","className","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","useFetchGifs","GifExpertApp","categories","divRoot","document","querySelector","ReactDOM","render","saludo"],"mappings":"oNAIeA,EAAgB,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAE7B,EAAqCC,mBAAS,IAA9C,mBAAQC,EAAR,KAAoBC,EAApB,KAgBE,OACI,sBAAMC,SAXS,SAACC,GAClBA,EAAEC,iBACCJ,EAAWK,OAAOC,OAAS,IAE1BR,GAAc,SAAAS,GAAG,OAAMP,GAAN,mBAAoBO,OACrCN,EAAc,MAMhB,SACI,uBACAO,KAAM,OACNC,MAAST,EACTU,SAnBe,SAACP,GACtBF,EAAcE,EAAEQ,OAAOF,aAwB7BZ,EAAce,UAAU,CACtBd,cAAce,IAAUC,KAAKC,Y,mCC/BhBC,EAAO,uCAAG,WAAMC,GAAN,uBAAAC,EAAA,6DACbC,EADa,iDACmCC,UAAUH,GAD7C,+DAEAI,MAAMF,GAFN,cAEbG,EAFa,gBAGIA,EAAKC,OAHT,uBAGXC,EAHW,EAGXA,KAEFC,EAAOD,EAAKE,KAAI,SAAAC,GAAQ,IAAD,EACzB,MAAM,CACFC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QATvB,kBAaZM,GAbY,4CAAH,sDCDXO,EAAc,SAAC,GAAiB,IAAhBH,EAAe,EAAfA,MAAMV,EAAS,EAATA,IAG/B,OADAc,QAAQC,IAAIL,EAAMV,GAEd,sBAAKgB,UAAU,yCAAf,UACI,qBAAKC,IAAKjB,EAAMkB,IAAKR,IACrB,4BAAIA,QCHHS,EAAU,SAAC,GAAgB,IAAfrB,EAAc,EAAdA,SASrB,ECRwB,SAAEA,GAE1B,MAA0BlB,mBAAU,CAChCyB,KAAM,GACNe,SAAS,IAFb,mBAAOC,EAAP,KAAcC,EAAd,KAmBC,OAdAC,qBAAU,WACP1B,EAAQC,GACP0B,MAAK,SAAAC,GAEEH,EAAS,CACLjB,KAAMoB,EACNL,SAAQ,MAIlB,OAEH,CAACtB,IAEIuB,EDbuBK,CAAa5B,GAAhCa,EAAZ,EAAON,KAAae,EAApB,EAAoBA,QAIpB,OACI,qCACQ,6BAAKtB,IACJsB,GAAW,yCAChB,qBAAKJ,UAAU,YAAf,SAGQL,EAAOJ,KAAI,SAACC,GAAD,OACP,cAAC,EAAD,eAEIA,GADCA,EAAIC,aEUlBkB,EAhCM,WAGjB,MAAoC/C,mBAAS,CAAC,cAA9C,mBAAOgD,EAAP,KAAmBjD,EAAnB,KAMA,OACI,gCACI,8CACA,cAAC,EAAD,CAAeA,cAAiBA,IAChC,uBACA,6BAEQiD,EAAWrB,KAAI,SAAAT,GAAQ,OAEpB,cAAC,EAAD,CAEKA,SAAUA,GADLA,YClB3B+B,G,MAAUC,SAASC,cAAc,UACvCC,IAASC,OACL,cAAC,EAAD,CAAcC,OAAS,iBAAkBL,K","file":"static/js/main.186d2793.chunk.js","sourcesContent":["  \n  import React, { useState } from 'react';\n  import PropTypes from 'prop-types'; \n  \n  export const AddCategories = ({setCategories}) => {\n      \n    const  [inputValue, setInputValue] = useState('');\n    \n    const handleInputValue = (e)=>{\n        setInputValue(e.target.value);\n    }\n\n    const handleSubmit = (e)=>{\n        e.preventDefault();\n        if(inputValue.trim().length > 2){\n\n            setCategories(cat => [ inputValue,...cat, ]);\n            setInputValue('');\n        }\n    }\n\n\n      return (\n          <form onSubmit= {handleSubmit}>\n              <input \n              type= 'text'\n              value = {inputValue}\n              onChange = {handleInputValue}\n              />                         \n          </form>\n      )\n  }\n\n  AddCategories.prototype={\n    setCategories:PropTypes.func.isRequired\n\n  }\n  ","\n\n\n   export  const getGifs = async(category )=>{\n        const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(category)}&limit=10&api_key=8udhz4WD2vbHnXA8M4FmbHqPQHdYgh2O`;\n        const resp = await fetch(url);\n        const { data } = await resp.json();\n\n        const gifs = data.map(img => {\n            return{\n                id: img.id,\n                title: img.title,\n                url: img.images?.downsized_medium.url\n            }\n        });\n\n        return gifs;\n        \n\n    }","import React from 'react'\n\nexport const GifGridItem = ({title,url}) => {\n\n    console.log(title,url);\n    return (\n        <div className=\"card animate__animated animate__bounce\">\n            <img src={url}  alt={title}/>\n            <p>{title}</p>\n        </div>\n    )\n}\n","import React from 'react'\n//import { getGifs } from '../helpers/getGifs';\nimport { useFetchGifs } from '../hooks/useFetchGifs';\nimport { GifGridItem } from './GifGridItem';\n\nexport const GifGrid = ({category}) => {\n    \n    //  const [images, setImages] = useState([]); \n\n    // useEffect (()=>{\n        \n    //     getGifs(category)\n    //     .then(setImages);\n    // },[category]);\n    const {data:images ,loading} = useFetchGifs(category);\n\n\n\n    return (\n        <> \n                <h3>{category}</h3>\n                {loading && <p>Loading </p>}\n            <div className=\"card-grid\">\n             \n                {\n                    images.map((img) =>(\n                        <GifGridItem  \n                        key={img.id}\n                        {...img}\n                        />\n                        ))\n                        }\n                \n            </div>\n        </>\n    )\n}\n","\n\nimport  { useEffect, useState } from 'react';\nimport { getGifs } from '../helpers/getGifs';\n\n\nexport const useFetchGifs = ( category) => {\n    \n    const [state, setState] = useState( { \n        data: [],\n        loading: true \n     });\n\n     useEffect(()=>{\n        getGifs(category)\n        .then(imgs =>{\n\n                setState({\n                    data: imgs,\n                    loading:false\n                });\n            \n\n        },3000);\n\n     },[category]);\n\n     return state;\n\n}\n","import React,{useState} from 'react';\nimport { AddCategories } from './components/AddCategories';\nimport { GifGrid } from './components/GifGrid';\n\n\nconst GifExpertApp = () => {\n\n\n    const [categories, setCategories] = useState(['One Punch']);\n\n    // const handleAdd= ()=>{\n    //     //setCategories([...categories,'HunterXHunter']); \n    //     setCategories (cat => [...cat, 'HunterXHunter']);\n    // } \n    return (\n        <div>\n            <h2>GifExpertApp</h2>\n            <AddCategories setCategories = {setCategories}/> \n            <hr/>\n            <ol>\n               { \n                    categories.map(category => (\n\n                       <GifGrid \n                            key={category }\n                            category={category}  \n                       />\n                    ))\n                       \n                }\n            </ol>\n        </div>\n    )\n}\n\n\n\nexport default GifExpertApp;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport GifExpertApp from './GifExpertApp';\nimport './index.css';\n\n\nconst divRoot = document.querySelector('#root');\nReactDOM.render(\n    <GifExpertApp saludo = 'GifExpertApp' />,divRoot );\n\n\n"],"sourceRoot":""}